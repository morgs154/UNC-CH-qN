List of files of qN source code and a brief description of what they contain


Basic Simulation ................... Checks basic trait and life cycle parameters to make qN runnable, compiles used and unused 
                                     traits/LCE (defaults) to begin building the simulation
                                     
BasicSim.Header .................... Manages components of simulations and trait and life cycle input and sets of parameters (not a 
                                     runnable simulation)
  
Bandwidth Matrix ................... Adding matricies together, resizing, conversions, regulating bandwidth use to maximize time/memory

ControlWordsBits.Header ............ Used to create and manipulate settings options by converting between bits and int

Cholesky ........................... Cholesky decomposition algorithm for a symmetric matrix

File Handler ....................... Checks needed parameters to run, sets file path in directory, composes data for allele/loci/
                                     indiv/patch, and ends simulation

File Handler.Header ................ I/O Interfeace for BasicSim, focus on periodic parameters and outputs, sets handler parameters

File Parser ........................ Reads in and adds parameter w/ argument to map, ends program if settings/ext/param cannot be read

File Parser.Header ................. Reads in input and passes it to Steam Parser, contians paramters of FileParser

File Services ...................... Outputs log file for sim-records parameters

File Services.Header ............... Composes output files, saves parameters, checks file names, loads/attaches filehandlers

Handler.Header ..................... Observer for FileHandler and StatHandler, initializes state, updates handler state, and patch pop
                                     to compute stas in StatHandler
                                     
File HHolder ....................... QR, QRZ and QRT decompositions of matricies, updates/extends othagonal functtion

Include.Header ..................... Gen library of required include folders-exceptions, data types, standardlibraries, different 
                                     operating systems, sets basics of headers, math, time
                                 
IndFactory ........................ Creates prototype of metapop, creates individual/offspring according to parameters  

IndFactory.Header ................. Stores prototype info of individual/traits in map, recycles unused indivs

Individual ........................ Using initial parameters, customizes, clones, inherits to create individual

Individual.Header ................. Interface for Indiv, accounts for traits, fecundity, mating events w/in and b/w patches, trait
                                    values/fitness, recomb/mutation, inheritance
                        
LCE Breed ......................... Mating Function-random, full/partial polygyny, monogamy, selfing; Selection at rep and for newborn,
                                    sex ratios, breeding sel at patch and metapop, pop size regulation
                                    
LCE Breed.Header .................. Adds in fecundity, mating system/proportions, mating/breeding systems                                     

LCE Dispersal ..................... Takes in user parameters, dispersal matricies, patch migration demography, if sex-specific, island
                                    migration model, edge patches, stepping stone, logistic params
                                    
LCE Dispersal.Header .............. Stores dispersal matricies/param/model, moves offspring to patch containers

LCE Misc .......................... Notifies File/Stat Services, loop through gens and sum occurrances, temporal changes, aging, patch
                                    extinction, reg sel/K, prints Stats
                                    
LCE Misc.Header ................... Interface notifies file handlers to update for output, reg poppost-dispersal, removes adults from
                                    their patch containers, extinctions

LCE.Header ........................ Explanation of LCE, can link LCE to trait

Main .............................. Sets up simulation display, runtime errors

MetaPop .......................... Initialize variables, add in parameters-K, size, enviro, sel, temporal changes, patch value/matrix
                                    LCE, replicate loop, density dep disp, (K/sel sex specific); genetic map output, Fstats, counters  

MetaPop.Header ................... Loops of LCE, generations, and replicates, index of age classes, selection values, builds pop from
                                    SimBuilder, tracks age and sex classes
                                    
MetaPop Stat Handler ............. Patch extinction accounting for fecundity, migrations, fitness; demography values; relatedness;
                                   migrations and proportion to residents; fitness variance
                                   
MetaPop Stat Handler.Header ...... Declares varibales for migration, demography, kinship, fitness, extinctions

MTRand ........................... Mersenne Twister Random number generator, initialize and generate numbers

MTRand.Header .................... Declares various constructors w/ seeds, use bits to gen ints, open intervals

Exception Handler ................ Throws exceptions for simulation, tracer, base class to derived class, stack, Janitor, run time error,
                                   various logic errors, 

Exception Handler.Header ......... Defines exception designs (try, throw, catch), derive from BaseException, Janitor class, checks
                                   classes/arrays/objects, some runtime/logic errors
                                   
Newmat.Header ........................... Newmat matrix manipuation library- defines matrix segments, math functions; locate code not used by
                                   tests; matrix types and conversions, routines; working classes for matrices, reverse order

Newmat Funct ..................... Manipulating matrices, checks if valid, square, symmetric, skew, upper, lower, diagonal, band, and
                                   combinations, then creates new matrix with defined attributes

Newmat Row/Column ................ Performs operations on the rows/columns of matrix, including skipping, storing, and mathematical ops;
                                   repeats for different MatrixTypes
                                   
Newmat Get Row/Column ............ Outlines needed functions, load/restore data, repeats for different MatrixTypes, destructors

Newmat Util ...................... Constructors for MatrixTypes, conversions (uses GeneralMatrix), resizing for different Types, matrix
                                   manipulating, checks sotrage compatibility and memory, construct new array, swap values

Newmat Eval ...................... Performs scalar ops, transpose and evaluate, mathematical ops, input/filling matrix, reversing order 

Newmat Op ........................ Operators repeated for Types, scaling/shifting/stacking. GeneralMatrix operators, Generics, get elements

Newmat Binary .................... Solves routines, binary operations, add/subract matirces of same/different storages, concatonate, 
                                   stacking, comparing matrices

Newmat Scalar .................... LU decomposition, scalar functions, min/max routines, determinants

Newmat Output .................... for G++ compliers (Linux), operators

Newmat Adv.Header................. Advanced functions and applications (ex: Cholesky), sorts, Jacobi, Eigen, FFT, Helmert 

Newmat Excep ..................... Read in Matrix and run through potential errors-base, singular, convergence, overflow, Type, build
                                   index, misc

Newmat I/O.Header ................ Define package input/output for older G++, operators/precision

Newmat Non-Lin Opti .............. Non-linear optimization, Cases-start/cont, least squares, fit, variance

Newmat Non-Lin.Header ............ FindMaximum2, NonLinearLeastSquares, MaximumLiklihood, (w/ outlines)

Newmat Row/Column.Header ......... Declares classes used to access rows/columns, public variables/methods

Newmat Rect Op ................... Rectangular matrix operations-scaling,rotate, pythagorean theorem

Newmat Rect Op.Header ............ Declares classes and their methods

Node ............................. Getters/setters for manipulating an object in the Tree

Node.Header ...................... Sets parameters for Node, pairs phenotype to genotype(mapped), connects branches and leaves

Array Org ........................ Produces messages for errors, timer, sorts/deletes array, removes bad elements, reads FSTAT files,
                                   checks their format
                                  
Array Org.Header ................. Declares methods, sets up array, logistic growth models, checks slope    

Parameter ........................ Updates for temporal parameters, checks input with type and range (throws error if incorrect), sets it 
                                   with sequence/reps, gets and read through matrix, cases for different Object types, checks for 
                                   required or double inputs, adds/sets new parameters, organizes parameter output
                                   
Parameter.Header ................ Defines parameter and stores value, outlines terms, sets parameter outlines, repeats for matrix, adds
                                  flags, accessors

Patch ........................... Links parameters to quantitative traits, sets initial environment/population, variance, selection
                                  pressures, sets new generations, adds/removes individuals in sex/age containers, ages population, 
                                  downreg pop size according to K and low fitnes 

Patch.Header .................... Defines Patch interface/variables, outlines selection pressures, name setters/getters, phenotypic array
                                  
Precision.Header ................ Sets max/min of types(w/ exponents), holds different FloatingPointPrecision classes (changes in library,
                                  headers, or method function)

RandGen.Header ................... Holds random number generator class, produces a number from across various distributions, looks at 
                                   deviates, cumulative array, returns values to normal distribution

Service.Header ................... Interface for files/stats of simulation, updates Observers

SimComp.Header ................... Interface for basic simulation aspects including parameters




X1-DMI    Set parameters for haploid and diploid, incompatibility table, load/set genotype/stat files, initates sequence, inheritance, 
mutations, viability, LCE (initial, spatial pattens)
X2 Header   Decares variables and methods(getters/setters), inheritance/mutation routines, record genotype to txt file, statHandler,initialize


